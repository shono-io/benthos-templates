name: backbone_filter
type: processor
status: beta

fields:
  - name: events
    kind: list
    type: string
    description: the events to listen for in the format <scope>:<concept>:<event>

mapping: |-
  map filter {
    root.mapping = """
    let events = %s
    let evt = if content().length() != 0 {
      "%%s:%%s:%%s".format(meta("io.shono.scope"), meta("io.shono.concept"), meta("io.shono.event"))
    } else {
      "unknown"
    }
    root = if $events.contains($evt) { this } else { deleted() }""".format(this.events.format_json(no_indent: true))
  }

  map metric {
    root.switch = [
      {"check": "root.found", "processors": [this.apply("metric_processing")]},
      {"processors": [this.apply("metric_filtered")]}
    ]
  }

  map metric_processing {
    root.metric.type = "counter"
    root.metric.name = "io_shono_processing"
    root.metric.labels.app = "${APP_ID}"
    root.metric.labels.kind = "event"
    root.metric.labels.scope = "${!meta(\"io.shono.scope\")}"
    root.metric.labels.concept = "${!meta(\"io.shono.concept\")}"
    root.metric.labels.event = "${!meta(\"io.shono.event\")}"
  }

  map metric_filtered {
    root.metric.type = "counter"
    root.metric.name = "io_shono_filtered"
    root.metric.labels.app = "${APP_ID}"
    root.metric.labels.kind = "event"
  }

  root.branch.processors = [
    this.apply("filter"),
    this.apply("metric")
  ]
tests:
  - name: Test With Kafka
    config:
      events:
        - hr:people:created
        - hr:people:updated
        - iam:user:authenticated
    expected:
      branch:
        processors:
          - mapping: |-
              let events = ["hr:people:created","hr:people:updated","iam:user:authenticated"]
              let evt = if content().length() != 0 {
                "%s:%s:%s".format(meta("io.shono.scope"), meta("io.shono.concept"), meta("io.shono.event"))
              } else {
                "unknown"
              }
              root = if $events.contains($evt) { this } else { deleted() }

          - switch:
              - check: root.found
                processors:
                  - metric:
                      type: counter
                      name: "io_shono_processing"
                      labels:
                        app: "${APP_ID}"
                        kind: "event"
                        scope: "${!meta(\"io.shono.scope\")}"
                        concept: "${!meta(\"io.shono.concept\")}"
                        event: "${!meta(\"io.shono.event\")}"
              - processors:
                  - metric:
                      type: counter
                      name: "io_shono_filtered"
                      labels:
                        app: "${APP_ID}"
                        kind: "event"