name: depend_on
type: processor
status: beta

fields:
  - name: concept
    type: string
    description: the concept to depend on
  - name: key
    type: string
    description: the key to depend on

  - name: redis
    type: string
    default: ""
    description: the redis url to use
  - name: scope
    type: string
    default: ""
    description: the application scope

mapping: |-
  map kv_get {
    let redis = if this.redis == "" { env("REDIS_URL") } else { this.redis }
    let scope = if this.scope == "" { env("APP_SCOPE") } else { this.scope }
  
    root.label = "check_%s_dependency".format(this.concept)
    root.redis.url = $redis
    root.redis.command = "get"
    root.redis.args_mapping = """root = [ "%s:dependencies:%s:%%s".format(this.key.escape_url_query()) ]""".format($scope, this.concept)
    root.redis.retries = 0
  }
  
  root.branch.request_map = """root = if %[1]s.or("").string().trim().length() == 0 { 
    deleted() 
  } else { 
    {"key": %[1]s} 
  }""".format(this.key)
  root.branch.processors = []
  root.branch.processors."-".try = []
  root.branch.processors."0".try."-" = this.apply("kv_get")
  
  root.branch.processors."-".catch = []
  root.branch.processors."1".catch."-".mapping = """meta err_code = "DEPENDENCY_NOT_FOUND"
  meta err_msg = "no %s found with key %%q".format(this.key)
  root = throw("%%s: %%s".format(@err_code, @err_msg))""".format(this.concept)

tests:
  - name: Should use configured fields
    config:
      redis: redis://my-other-redis-server:6379
      scope: "exact"
      concept: "account"
      key: "this.AccountId"
    expected:
      branch:
        request_map: |-
          root = if this.AccountId.or("").string().trim().length() == 0 { 
            deleted() 
          } else { 
            {"key": this.AccountId} 
          }
        processors:
          - try:
              - label: "check_account_dependency"
                redis:
                  url: redis://my-other-redis-server:6379
                  command: get
                  args_mapping: |-
                    root = [ "exact:dependencies:account:%s".format(this.key.escape_url_query()) ]
                  retries: 0

          - catch:
              - mapping: |-
                  meta err_code = "DEPENDENCY_NOT_FOUND"
                  meta err_msg = "no account found with key %q".format(this.key)
                  root = throw("%s: %s".format(@err_code, @err_msg))

  - name: Should fall back to environment vars when config not specified
    config:
      concept: "account"
      key: "this.AccountId"
    expected:
      branch:
        request_map: |-
          root = if this.AccountId.or("").string().trim().length() == 0 { 
            deleted() 
          } else { 
            {"key": this.AccountId} 
          }
        processors:
          - try:
              - label: "check_account_dependency"
                redis:
                  url: redis://my-redis-server:6379
                  command: get
                  args_mapping: |-
                    root = [ "my-scope:dependencies:account:%s".format(this.key.escape_url_query()) ]
                  retries: 0

          - catch:
              - mapping: |-
                  meta err_code = "DEPENDENCY_NOT_FOUND"
                  meta err_msg = "no account found with key %q".format(this.key)
                  root = throw("%s: %s".format(@err_code, @err_msg))