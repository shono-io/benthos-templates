name: debezium_filter
type: processor
status: beta

fields:
  - name: events
    kind: list
    type: string
    description: the events to listen for in the format <table>:<change>

mapping: |-
  map filter {
    root.mapping = """
    let changes = %s
    let change = if content().length() != 0 {
      "%%s:%%s".format(this.table, this.operation)
    } else {
      "unknown"
    }
    root = this
    root.found = $changes.contains($change)""".format(this.events.format_json(no_indent: true))
  }
  
  map metric {
    root.switch = [
      {"check": "this.found", "processors": [this.apply("metric_processing")]},
      {"processors": [this.apply("metric_filtered")]}
    ]
  }
  
  map metric_processing {
    root.metric.type = "counter"
    root.metric.name = "io_shono_processing"
    root.metric.labels.app = "${APP_ID}"
    root.metric.labels.kind = "cdc"
    root.metric.labels.operation = "${!this.operation}"
    root.metric.labels.table = "${!this.table}"
    root.metric.labels.db = "${!this.db}"
  }
  
  map metric_filtered {
    root.metric.type = "counter"
    root.metric.name = "io_shono_filtered"
    root.metric.labels.app = "${APP_ID}"
    root.metric.labels.kind = "cdc"
  }
  
  root.branch.processors = [
    this.apply("filter"),
    this.apply("metric")
  ]

tests:
  - name: Test With Kafka
    config:
      scope: "exact"
      events:
        - cicmpy:created
        - cicmpy:updated
        - cicmpy:imported
    expected:
      branch:
        processors:
          - mapping: |-
              let changes = ["cicmpy:created","cicmpy:updated","cicmpy:imported"]
              let change = if content().length() != 0 {
                "%s:%s".format(this.table, this.operation)
              } else {
                "unknown"
              }
              root = this
              root.found = $changes.contains($change)
          - switch:
              - check: this.found
                processors:
                  - metric:
                      type: counter
                      name: "io_shono_processing"
                      labels:
                        app: "${APP_ID}"
                        kind: "cdc"
                        operation: "${!this.operation}"
                        table: "${!this.table}"
                        db: "${!this.db}"
              - processors:
                  - metric:
                      type: counter
                      name: "io_shono_filtered"
                      labels:
                        app: "${APP_ID}"
                        kind: "cdc"